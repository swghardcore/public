/*
				Copyright <SWGEmu>
		See file COPYING for copying conditions.*/

package server.zone.objects.tangible.deed;

import server.zone.objects.creature.CreatureObject;
import server.zone.objects.tangible.deed.Deed;
import server.zone.packets.object.ObjectMenuResponse;
include server.zone.objects.manufactureschematic.craftingvalues.CraftingValues;
import server.zone.packets.scene.AttributeListMessage;

@json
class ResourceDeed extends Deed {

	protected int amount;

	public ResourceDeed() {
		Logger.setLoggingName("ResourceDeed");

		amount = 1000;

	}

	public native void initializeTransientMembers();

	/**
	 * Fills the radial options, needs to be overriden
	 * @pre { this object is locked }
	 * @post { this object is locked, menuResponse is complete}
	 * @param menuResponse ObjectMenuResponse that will be sent to the client
	 */
	@local
	@dirty
	public native void fillObjectMenuResponse(ObjectMenuResponse menuResponse, CreatureObject player);

	/**
	 * Handles the radial selection sent by the client
	 * @pre { this object is locked, player is locked }
	 * @post { this object is locked, player is locked }
	 * @returns 0 if successfull
	 */
	public native int handleObjectMenuSelect(CreatureObject player, byte selectedID);

	public native int useObject(CreatureObject player);

	@local
	@dirty
	public native void fillAttributeList(AttributeListMessage msg, CreatureObject object);

	/**
	 * Removes this object from parent container
	 * @pre { this object is locked, player is locked }
	 * @post { this object is locked, player is locked }
	 */
	public native void destroyDeed();

	@local
	public native void updateCraftingValues(CraftingValues values, boolean firstUpdate);
	
	@read
	public int getAmount() {
		return amount;
	}

	@preLocked
	public native void setAmount(int val) {
		amount = val;
	}
}
